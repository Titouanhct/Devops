services:
  db:
    image: postgres:16
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d data"]
      interval: 10s
      retries: 5
      timeout: 10s
    container_name: popeye-db
    networks:
      - result-tier
      - back-tier
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=data
    restart: on-failure
  redis:
    image: redis:7.4.2
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 10s
    container_name: popeye-redis
    networks:
      - poll-tier
      - back-tier
    expose:
      - 6379
    restart: on-failure
  poll:
    container_name: popeye-poll
    build: poll
    depends_on:
      redis:
        condition: service_started
    networks:
      - poll-tier
    ports:
      - 5000:80
    environment:
      - REDIS_HOST=redis
    restart: on-failure
  result:
    container_name: popeye-result
    build: result
    depends_on:
      db:
        condition: service_healthy
        restart: true
    ports:
      - 5001:80
    networks:
      - result-tier
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=data
    restart: on-failure
  worker:
    container_name: popeye-worker
    build: worker
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
    networks:
      - back-tier
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=data
    restart: on-failure


networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge


volumes:
  db-data:
